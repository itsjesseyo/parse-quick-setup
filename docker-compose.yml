parse-server:
  #build: .
  image: yongjhih/parse-server
  restart: always
  ports:
    - "1337:1337"
  environment:
    PORT: 1337
    DATABASE_URI: $DATABASE_URI
    APP_ID: $APP_ID
    MASTER_KEY: $MASTER_KEY
    PARSE_MOUNT: $PARSE_MOUNT # /parse
    COLLECTION_PREFIX: $COLLECTION_PREFIX
    CLIENT_KEY: $CLIENT_KEY
    REST_API_KEY: $REST_API_KEY
    DOTNET_KEY: $DOTNET_KEY
    JAVASCRIPT_KEY: $JAVASCRIPT_KEY
    FILE_KEY: $FILE_KEY
    FACEBOOK_APP_IDS: $FACEBOOK_APP_IDS
    SERVER_URL: $SERVER_URL
    MAX_UPLOAD_SIZE: $MAX_UPLOAD_SIZE # 20mb
    GCM_ID: $GCM_ID
    GCM_KEY: $GCM_KEY
    PRODUCTION_PFX: $PRODUCTION_PFX
    PRODUCTION_PASSPHRASE: $PRODUCTION_PASSPHRASE
    PRODUCTION_BUNDLE_ID: $PRODUCTION_BUNDLE_ID
    PRODUCTION_CERT: $PRODUCTION_CERT # prodCert.pem
    PRODUCTION_KEY: $PRODUCTION_KEY # prodKey.pem
    DEV_PFX: $DEV_PFX
    DEV_PASSPHRASE: $DEV_PASSPHRASE
    DEV_BUNDLE_ID: $DEV_BUNDLE_ID
    DEV_CERT: $DEV_CERT # devCert.pem
    DEV_KEY: $DEV_KEY # devKey.pem
    VERIFY_USER_EMAILS: $VERIFY_USER_EMAILS # 0
    EMAIL_MODULE: $EMAIL_MODULE # "" or "parse-server-mailgun-adapter-template"
    EMAIL_FROM: $EMAIL_FROM
    EMAIL_DOMAIN: $EMAIL_DOMAIN
    EMAIL_API_KEY: $EMAIL_API_KEY
    EMAIL_DISPLAY_NAME: $EMAIL_DISPLAY_NAME
    EMAIL_REPLY_TO: $EMAIL_REPLY_TO
    EMAIL_VERIFICATION_SUBJECT: $EMAIL_VERIFICATION_SUBJECT
    EMAIL_VERIFICATION_BODY: $EMAIL_VERIFICATION_BODY
    EMAIL_VERIFICATION_BODY_HTML: $EMAIL_VERIFICATION_BODY_HTML
    EMAIL_PASSWORD_RESET_SUBJECT: $EMAIL_PASSWORD_RESET_SUBJECT
    EMAIL_PASSWORD_RESET_BODY: $EMAIL_PASSWORD_RESET_BODY
    EMAIL_PASSWORD_RESET_BODY_HTML: $EMAIL_PASSWORD_RESET_BODY_HTML
    ENABLE_ANON_USERS: $ENABLE_ANON_USERS # 1
    ALLOW_CLIENT_CLASS_CREATION: $ALLOW_CLIENT_CLASS_CREATION # 1
    PARSE_EXPERIMENTAL_CONFIG_ENABLED: $PARSE_EXPERIMENTAL_CONFIG_ENABLED # 0
    TESTING: $TESTING # 0
    APP_NAME: $APP_NAME
    PUBLIC_SERVER_URL: $PUBLIC_SERVER_URL
    TRUST_PROXY:      $TRUST_PROXY
    S3_ACCESS_KEY:    $S3_ACCESS_KEY
    S3_SECRET_KEY:    $S3_SECRET_KEY
    S3_BUCKET:        $S3_BUCKET
    S3_DIRECT:        $S3_DIRECT
    GCP_PROJECT_ID:   $GCP_PROJECT_ID
    GCP_KEYFILE_PATH: $GCP_KEYFILE_PATH
    GCS_BUCKET:       $GCS_BUCKET
    GCS_DIRECT:       $GCS_DIRECT
    AZURE_ACCOUNT:    $AZURE_ACCOUNT
    AZURE_CONTAINER:  $AZURE_CONTAINER
    AZURE_ACCESS_KEY: $AZURE_ACCESS_KEY
    AZURE_DIRECT:     $AZURE_DIRECT
    VIRTUAL_HOST:      $PARSE_SERVER_VIRTUAL_HOST
    LETSENCRYPT_HOST:  $PARSE_SERVER_LETSENCRYPT_HOST
    LETSENCRYPT_EMAIL: $PARSE_SERVER_LETSENCRYPT_EMAIL
    GRAPHQL_SUPPORT:  $GRAPHQL_SUPPORT
    GRAPHQL_SCHEMA:   $GRAPHQL_SCHEMA
    LOG_LEVEL:        $LOG_LEVEL
  links:
    - mongo
  volumes_from:
    - parse-cloud-code
  volumes:
    - /parse/cloud
    - "./volumes/certs:/certs"

parse-cloud-code:
  #build: cloud/.
  image: yongjhih/parse-cloud-code
  restart: always
  volumes:
    - /parse/cloud
  command: "ls /parse/cloud"

git:
  image: yongjhih/parse-server:git
  restart: always
  ports:
    - "2022:22"
  environment:
    PORT: 22
    #WORKTREE: $GIT_WORKTREE
    #REPO_PATH: $GIT_REPO_PATH
  volumes_from:
    - parse-server

parse-cloud-code:
  image: yongjhih/parse-cloud-code
  restart: always
  volumes:
    - /parse/cloud
  command: "ls /parse/cloud"

mongo:
  image: mongo:3.0.8 # ref. https://github.com/ParsePlatform/parse-server/issues/1913
  restart: always
  ports:
    - "27017:27017"
  volumes_from:
    - mongo-data
#  command: "--smallfiles --logpath=/dev/null --setParameter failIndexKeyTooLong=false --rest --auth"
  command: "--smallfiles --logpath=/dev/null --setParameter failIndexKeyTooLong=false"
# ref. http://www.diogogmt.com/running-mongodb-with-docker-and-compose/
mongo-data:
  image: mongo
  restart: always
  volumes:
    - /data/db
  command: "--break-mongo"

nginx:
  image: nginx
  restart: always
  container_name: nginx
  ports:
    - "80:80"
    - "443:443"
  volumes:
    - "/etc/nginx/conf.d"
    - "/etc/nginx/vhost.d"
    - "/usr/share/nginx/html"
    - "./volumes/proxy/certs:/etc/nginx/certs:ro"
nginx-gen:
  image: jwilder/docker-gen
  restart: always
  container_name: nginx-gen
  volumes:
    - "/var/run/docker.sock:/tmp/docker.sock:ro"
    - "./volumes/proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
  volumes_from:
    - nginx
  entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -only-exposed -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
letsencrypt-nginx-proxy-companion:
  image: jrcs/letsencrypt-nginx-proxy-companion
  restart: always
  container_name: letsencrypt-nginx-proxy-companion
  volumes_from:
    - nginx
  volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
    - "./volumes/proxy/certs:/etc/nginx/certs:rw"
  environment:
    - NGINX_DOCKER_GEN_CONTAINER=nginx-gen

# vim:set et ts=2 sw=2: